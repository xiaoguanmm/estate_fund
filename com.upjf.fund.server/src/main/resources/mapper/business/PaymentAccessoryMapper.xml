<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.upjf.fund.service.impl.business.mapper.PaymentAccessoryMapper">
  <resultMap id="BaseResultMap" type="com.upjf.fund.dto.PaymentAccessory">
    <id column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="payment_id" jdbcType="VARCHAR" property="paymentId" />
    <result column="accessory_type" jdbcType="CHAR" property="accessoryType" />
    <result column="file_id" jdbcType="VARCHAR" property="fileId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Base_Column_List">
    pid, payment_id, accessory_type, file_id, create_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment_accessory
    where pid = #{pid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from payment_accessory
    where pid = #{pid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.upjf.fund.dto.PaymentAccessory">
    <selectKey keyProperty="pid" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into payment_accessory (payment_id, accessory_type, file_id, 
      create_date)
    values (#{paymentId,jdbcType=VARCHAR}, #{accessoryType,jdbcType=CHAR}, #{fileId,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.upjf.fund.dto.PaymentAccessory">
    <selectKey keyProperty="pid" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into payment_accessory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        payment_id,
      </if>
      <if test="accessoryType != null">
        accessory_type,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="accessoryType != null">
        #{accessoryType,jdbcType=CHAR},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.upjf.fund.dto.PaymentAccessory">
    update payment_accessory
    <set>
      <if test="paymentId != null">
        payment_id = #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="accessoryType != null">
        accessory_type = #{accessoryType,jdbcType=CHAR},
      </if>
      <if test="fileId != null">
        file_id = #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pid = #{pid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.upjf.fund.dto.PaymentAccessory">
    update payment_accessory
    set payment_id = #{paymentId,jdbcType=VARCHAR},
      accessory_type = #{accessoryType,jdbcType=CHAR},
      file_id = #{fileId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where pid = #{pid,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsertPaymentAccessory" parameterType="com.upjf.fund.dto.PaymentAccessory">
  	insert into  payment_accessory (
  		pid, 
  		payment_id, 
  		accessory_type, 
  		file_id, 
  		create_date
  	) values
  	<foreach collection="accessoryList" item="accessory" separator=",">
  		(
			#{accessory.pid},
			#{accessory.paymentId},
			#{accessory.accessoryType},
			#{accessory.fileId},
			#{accessory.createDate}
  		)
  	</foreach>
  </insert>
  
  <select id="getPaymentAccessoriesByPaymentId" resultType="map">
  	select 
	  	payment_accessory.pid,
	  	estate_fund_file.pid as file_pid,
	  	payment_accessory.payment_id,
  		payment_accessory.accessory_type,
  		(case accessory_type when '1' then'收款凭证' when '0' then '付款凭证' else '其他' end) as accessory_type_name,
  		payment_accessory.file_id,
  		payment_accessory.create_date,
  		concat(estate_fund_file.real_name,'.',estate_fund_file.file_type) as file_all_name,
  	    (select user_info.user_name from user_info user_info where user_info.pid = estate_fund_file.create_id) as user_name,
  	    (select user_info.name from user_info user_info where user_info.pid = estate_fund_file.create_id) as userRealName,
  		estate_fund_file.file_url
  	from payment_accessory payment_accessory inner join estate_fund_file estate_fund_file on payment_accessory.file_id = estate_fund_file.pid
  	where payment_accessory.payment_id =#{paymentId,jdbcType=VARCHAR} and estate_fund_file.status = '1'	order by create_date desc limit ${offset},${pageRows}
  </select>
  <select id="countPaymentAccessoriesByPaymentId" resultType="integer" parameterType="string">
  	select
  		count(1) 
  	from payment_accessory payment_accessory inner join estate_fund_file estate_fund_file on payment_accessory.file_id = estate_fund_file.pid
  	where payment_accessory.payment_id =#{paymentId,jdbcType=VARCHAR} and estate_fund_file.status = '1'
  </select>
</mapper>